//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2021.07.17 at 12:25:07 AM BST 
//

package generated;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlType;

/**
 * <p>
 * Java class for anonymous complex type.
 * 
 * <p>
 * The following schema fragment specifies the expected content contained within
 * this class.
 * 
 * <pre>
 * &lt;complexType>
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element ref="{}directorMovies" maxOccurs="unbounded"/>
 *         &lt;element ref="{}stats"/>
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "", propOrder = { "directorMovies", "stats" })
@XmlRootElement(name = "directorList")
public class DirectorList {

    @XmlElement(required = true)
    protected List<DirectorMovies> directorMovies;
    @XmlElement(required = true)
    protected Stats stats;

    /**
     * Gets the value of the directorMovies property.
     * 
     * <p>
     * This accessor method returns a reference to the live list, not a snapshot.
     * Therefore any modification you make to the returned list will be present
     * inside the JAXB object. This is why there is not a <CODE>set</CODE> method
     * for the directorMovies property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * 
     * <pre>
     * getDirectorMovies().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link DirectorMovies }
     * 
     * 
     */
    public List<DirectorMovies> getDirectorMovies() {
        if (directorMovies == null) {
            directorMovies = new ArrayList<DirectorMovies>();
        }
        return this.directorMovies;
    }

    /**
     * Gets the value of the stats property.
     * 
     * @return possible object is {@link Stats }
     * 
     */
    public Stats getStats() {
        if (stats == null) {
            stats = new Stats();
        }
        return stats;
    }

    /**
     * Sets the value of the stats property.
     * 
     * @param value allowed object is {@link Stats }
     * 
     */
    public void setStats(Stats value) {
        this.stats = value;
    }

    @Override
    public String toString() {

        String str = "DirectorList\n";
        str = this.directorMovies.stream().map(dm -> "\n" + dm).reduce(str, String::concat);
        return str + "\nstats:\n" + stats;
    }

}
